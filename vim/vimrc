set shell=/bin/bash                                           " required if using another shell
set nocompatible
filetype off

call plug#begin('~/.vim/plugged')

"""""""""""""""
""" Plugins """
"""""""""""""""

Plug 'kien/rainbow_parentheses.vim'                           " Colorful parentheses
Plug 'Raimondi/delimitMate'                                   " Auto-close brackets
Plug 'scrooloose/syntastic'                                   " Syntax highlighting

" Color schemes
Plug 'morhetz/gruvbox'

" Git integration
Plug 'airblade/vim-gitgutter'                                 " Git info in gutter

" Fish
Plug 'vim-scripts/fish-syntax'

call plug#end()
filetype plugin indent on

""""""""""""""""""""""""
""" General settings """
""""""""""""""""""""""""

syntax on                   " Enable syntax highlighting
set t_Co=256                " Set terminal colours
set backspace=2
set number                  " Enable line numbers
set autoread                " Refresh buffers if they were changed from outside
set splitright              " Split new buffers to the right
set splitbelow              " Split new buffers below
set mouse=a                 " Enable mouse
set encoding=utf8
set nowrap

set nocursorline            " Don't paint cursor line (scrolling becomes painfully slow)
set nocursorcolumn          " Don't paint cursor column (scrolling becomes painfully slow)
set lazyredraw              " Wait to redraw

set hlsearch                " Highlight search matches
set incsearch               " Highlight search matches as you type

set ignorecase              " Ignore case when searching
set smartcase               " Ignore case if pattern is lowercase, case-sensitive otherwise
set gdefault                " Substitute globally by default

set colorcolumn=120

set nobackup                " Disable backup
set directory=~/.vim/tmp    " Temporary swap files directory

set nolist                  " Do not highlight whitespaces by default
set listchars=tab:▸\ ,eol:¬ " Display tabs as ▸, end of line as `¬`

set guioptions+=a           " Copy highlighted text to system clipboard
set guioptions-=r           " Remove scrollbars
set guioptions-=L

set background=dark
colorscheme gruvbox         " Set default color scheme

set tabstop=2               " Soft tab indentation with 2 spaces
set shiftwidth=2

set smarttab                " Use tabs at the beginning of line, spaces elsewhere
set expandtab               " Use spaces instead of tabs

set laststatus=2            " Always show status bar

set clipboard=unnamed       " Needed for clipboard integration

let mapleader="\<Space>"    " Remap leader to Space

set showcmd                 " show partially-typed commands
set wildmenu                " visual autocomplete for command menu
set wildmode=longest,list,full

set showmatch               " highlight matching parentheses

" Set extra options when running in GUI mode
if has("gui_running")
    set guioptions-=T
    set guioptions+=e
    set guitablabel=%M\ %t
endif

" Enable persistent undo
if exists("&undodir")
    set undofile
    let &undodir=&directory
    set undolevels=500
    set undoreload=500
endif

""""""""""""""""""""""""""""""""
""" Plugin-specific settings """
""""""""""""""""""""""""""""""""

""" Syntastic
let g:syntastic_auto_loc_list=1
let g:syntastic_mode_map = { "mode": "active", "passive_filetypes": ["sbt", "scala"] }

""" Rainbow parentheses
au VimEnter * RainbowParenthesesActivate
au Syntax   * RainbowParenthesesLoadRound
au Syntax   * RainbowParenthesesLoadSquare
au Syntax   * RainbowParenthesesLoadBraces

""" DelimitMate
au Filetype clojure let b:loaded_delimitMate = 1
let delimitMate_autoclose = 1
let delimitMate_expand_cr = 1

""""""""""""""""
""" Mappings """
""""""""""""""""

" Use ; to write commands, insteaf of :
nnoremap ; :
vnoremap ; :

" Do not copy the contents of an overwritten selection
vnoremap p "_dP

" Highlight last inserted text
"nnoremap gV `[v`]

" Make j,k jump to the wrapped part of a wrapped line, instead of jumping to the next
nnoremap j gj
nnoremap k gk

" Use jk to return to Normal Mode
inoremap jk <Esc>

" Clipboard shortcuts
nnoremap <Leader>dd "+dd
vnoremap <Leader>d "+d
nnoremap <Leader>yy "+yy
vnoremap <Leader>y "+y
nnoremap <Leader>p "+p
vnoremap <Leader>p "+p
nnoremap <Leader>P "+P
vnoremap <Leader>P "+P

" Disable arrow keys...
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>

" ...and use them to resize split panes
if bufwinnr(1)
  nnoremap <Up> <C-w>+
  nnoremap <Down> <C-w>-
  nnoremap <Right> <C-w>>
  nnoremap <Left> <C-w><
endif

"""""""""""""""""""""""""""
""" File types settings """
"""""""""""""""""""""""""""

au BufRead,BufNewFile *.md                setlocal filetype=markdown
au BufRead,BufNewFile *.sbt               setlocal filetype=sbt
au BufRead,BufNewFile *.scala             setlocal filetype=scala

""""""""""""""""""""""""""""""""""
""" File manipulation settings """
""""""""""""""""""""""""""""""""""

" Remove trailing whitespaces on save
autocmd BufWritePre *.* :%s/\s\+$//e

" Reload when entering buffer or gaining focus
au FocusGained,BufEnter * :silent! !

